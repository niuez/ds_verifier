{
  "accumlation2_verify": {
    "execute_path": "/home/runner/work/ds_verifier/ds_verifier/build/src/verify/accumlation2_verify",
    "source_path": "src/verify/accumlation2_verify.cpp",
<<<<<<< HEAD
    "timestamp": "2019-12-26 23:13:13",
=======
    "timestamp": "2019-12-26 13:57:26",
>>>>>>> c8f3aa00195f40602d3c69936a56731d8d4e38ad
    "status": "OK",
    "detail": [
      {
        "checker": "std::vector",
        "fail_at": {},
        "gen": "std::mt19937",
        "init_method": "random vector of int32",
        "query": "accumlate from 0 index",
        "query_count": 300,
        "status": "verified",
        "target": "accumulation",
        "test_case": "accumulation_example3",
<<<<<<< HEAD
        "timestamp": "2019-12-26 14:13:13"
=======
        "timestamp": "2019-12-26 13:57:26"
>>>>>>> c8f3aa00195f40602d3c69936a56731d8d4e38ad
      },
      {
        "checker": "std::vector",
        "fail_at": {},
        "gen": "std::mt19937",
        "init_method": "random vector of int32",
        "query": "accumlate from 0 index",
        "query_count": 300,
        "status": "verified",
        "target": "accumulation",
        "test_case": "accumulation_example4",
<<<<<<< HEAD
        "timestamp": "2019-12-26 14:13:13"
=======
        "timestamp": "2019-12-26 13:57:26"
>>>>>>> c8f3aa00195f40602d3c69936a56731d8d4e38ad
      }
    ]
  },
  "accumlation_verify": {
    "execute_path": "/home/runner/work/ds_verifier/ds_verifier/build/src/verify/accumlation_verify",
    "source_path": "src/verify/accumlation_verify.cpp",
<<<<<<< HEAD
    "timestamp": "2019-12-26 23:13:13",
=======
    "timestamp": "2019-12-26 13:57:26",
>>>>>>> c8f3aa00195f40602d3c69936a56731d8d4e38ad
    "status": "OK",
    "detail": [
      {
        "checker": "std::vector",
        "fail_at": {},
        "gen": "std::mt19937",
        "init_method": "random vector of int32",
        "query": "accumlate from 0 index",
        "query_count": 300,
        "status": "verified",
        "target": "accumulation",
        "test_case": "accumulation_example1",
<<<<<<< HEAD
        "timestamp": "2019-12-26 14:13:13"
=======
        "timestamp": "2019-12-26 13:57:26"
>>>>>>> c8f3aa00195f40602d3c69936a56731d8d4e38ad
      },
      {
        "checker": "std::vector",
        "fail_at": {},
        "gen": "std::mt19937",
        "init_method": "random vector of int32",
        "query": "accumlate from 0 index",
        "query_count": 300,
        "status": "verified",
        "target": "accumulation",
        "test_case": "accumulation_example2",
<<<<<<< HEAD
        "timestamp": "2019-12-26 14:13:13"
=======
        "timestamp": "2019-12-26 13:57:26"
>>>>>>> c8f3aa00195f40602d3c69936a56731d8d4e38ad
      }
    ]
  }
}